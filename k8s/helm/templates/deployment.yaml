# my_dex/k8s/helm/templates/deployment.yaml
#
# NEU (Sicherheitsupdate):
#  1) Container-SecurityContext => runAsNonRoot, readOnlyRootFilesystem
#  2) Resource-Requests/Limits => via .Values.resources
#  3) ConfigMap readonly => mount readOnly
#  4) PersistentVolumeClaim => Minimal kommentiert
#  5) Secrets für Passwörter eingebunden

apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-dex-node
  labels:
    app: my-dex
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: my-dex
  template:
    metadata:
      labels:
        app: my-dex
    spec:
      containers:
      - name: dex-node
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}

        ports:
          - name: dex
            containerPort: {{ .Values.service.port }}
          - name: metrics
            containerPort: {{ .Values.service.metricsPort }}

        env:
          - name: RUST_LOG
            value: "{{ .Values.nodeConfig.logLevel }}"
          - name: DEX_KEYSTORE_PASS
            valueFrom:
              secretKeyRef:
                name: my-dex-secrets
                key: DEX_KEYSTORE_PASS
          - name: DEX_HSM_PIN
            valueFrom:
              secretKeyRef:
                name: my-dex-secrets
                key: DEX_HSM_PIN
          - name: DEX_TURN_PASS
            valueFrom:
              secretKeyRef:
                name: my-dex-secrets
                key: DEX_TURN_PASS

        volumeMounts:
          - name: dex-config
            mountPath: /root/config
            readOnly: true
          - name: dex-storage
            mountPath: /data/dex_db

        securityContext:
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 1000
          runAsGroup: 1000

        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.service.metricsPort }}
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 2
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /readyz
            port: {{ .Values.service.metricsPort }}
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 3

        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}

      volumes:
        - name: dex-config
          configMap:
            name: my-dex-config

        - name: dex-storage
          persistentVolumeClaim:
            claimName: dex-node-pvc
